exit
@robots = Robot.all
Robot.all.count
Robot.all
@robot.all
exit
params
continue
Robot.all.select{|robot| robot.user_votes.any?{|vote| vote.user_id == current_user.id }}
Robot.all.select{|robot| !robot.user_votes.any?{|vote| vote.user_id == current_user.id }}
Robot.all.select{|robot| !robot.user_votes.include?(user_id: current_user.id)}
continue
Robot.last.user_votes.include?(user_id: current_user.id)
Robot.last.user_votes
Robot.last
current_user.id
current_user
Robot.all.select{|robot| robot.user_votes.include?(current_user.id)}
continue
UserVote.new(user_id: params[:user_id], robot_id: params[:robot_id]).valid?
UserVote.new(user_id: params[:user_id], robot_id: params[:robot_id])
UserVote.new(user_vote_params)
params
continue
Robot.all.select{|robot| !robot.user_votes.include?(current_user.id)}
Robot.all.select{|robot| robot.user_votes.include?(current_user.id)}
Robot.last.user_votes
Robot.last
@robot
continue
@robot.owner_id
@robot.owner
@robot.valid?
@robot = Robot.new(robot_params)
params
